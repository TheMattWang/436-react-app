{"ast":null,"code":"var _jsxFileName = \"/Users/mattwang/Documents/deg-plan/frontend/src/components/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await axios.post('/api/chatbot', {\n        message: input\n      });\n      const botReply = {\n        role: \"assistant\",\n        content: response.data.reply\n      };\n      setMessages(prev => [...prev, botReply]);\n    } catch (error) {\n      console.error(\"Error communicating with chatbot API\", error);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chatbotContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatMessagesStyle,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.role === \"user\" ? \"right\" : \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: msg.role === \"user\" ? userMessageStyle : botMessageStyle,\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatInputStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask TAMU-specific questions...\",\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: buttonStyle,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\n\n// Styles\nconst chatbotContainerStyle = {\n  width: \"400px\",\n  margin: \"20px auto\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"8px\",\n  overflow: \"hidden\",\n  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n  backgroundColor: \"#f9f9f9\"\n};\nconst chatMessagesStyle = {\n  height: \"300px\",\n  overflowY: \"scroll\",\n  padding: \"10px\",\n  borderBottom: \"1px solid #ccc\"\n};\nconst chatInputStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: \"10px\"\n};\nconst inputStyle = {\n  flex: 1,\n  padding: \"10px\",\n  fontSize: \"16px\",\n  borderRadius: \"4px\",\n  border: \"1px solid #ccc\",\n  marginRight: \"10px\"\n};\nconst buttonStyle = {\n  padding: \"10px 20px\",\n  fontSize: \"16px\",\n  backgroundColor: \"#7B0000\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"4px\",\n  cursor: \"pointer\"\n};\nconst userMessageStyle = {\n  backgroundColor: \"#E0F7FA\",\n  borderRadius: \"10px\",\n  padding: \"10px\",\n  margin: \"5px 0\",\n  display: \"inline-block\",\n  maxWidth: \"70%\"\n};\nconst botMessageStyle = {\n  backgroundColor: \"#B2EBF2\",\n  borderRadius: \"10px\",\n  padding: \"10px\",\n  margin: \"5px 0\",\n  display: \"inline-block\",\n  maxWidth: \"70%\"\n};\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","role","content","response","post","message","botReply","data","reply","prev","error","console","style","chatbotContainerStyle","children","chatMessagesStyle","map","msg","index","textAlign","userMessageStyle","botMessageStyle","fileName","_jsxFileName","lineNumber","columnNumber","chatInputStyle","type","value","onChange","e","target","placeholder","inputStyle","onClick","buttonStyle","_c","width","margin","border","borderRadius","overflow","boxShadow","backgroundColor","height","overflowY","padding","borderBottom","display","alignItems","flex","fontSize","marginRight","color","cursor","maxWidth","$RefreshReg$"],"sources":["/Users/mattwang/Documents/deg-plan/frontend/src/components/chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: \"user\", content: input };\n    setMessages([...messages, userMessage]);\n\n    try {\n      const response = await axios.post('/api/chatbot', { message: input });\n      const botReply = { role: \"assistant\", content: response.data.reply };\n      setMessages((prev) => [...prev, botReply]);\n    } catch (error) {\n      console.error(\"Error communicating with chatbot API\", error);\n    }\n\n    setInput(\"\");\n  };\n\n  return (\n    <div style={chatbotContainerStyle}>\n      <div style={chatMessagesStyle}>\n        {messages.map((msg, index) => (\n          <div key={index} style={{ textAlign: msg.role === \"user\" ? \"right\" : \"left\" }}>\n            <p style={msg.role === \"user\" ? userMessageStyle : botMessageStyle}>\n              {msg.content}\n            </p>\n          </div>\n        ))}\n      </div>\n      <div style={chatInputStyle}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Ask TAMU-specific questions...\"\n          style={inputStyle}\n        />\n        <button onClick={sendMessage} style={buttonStyle}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n\n// Styles\nconst chatbotContainerStyle = {\n  width: \"400px\",\n  margin: \"20px auto\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"8px\",\n  overflow: \"hidden\",\n  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n  backgroundColor: \"#f9f9f9\",\n};\n\nconst chatMessagesStyle = {\n  height: \"300px\",\n  overflowY: \"scroll\",\n  padding: \"10px\",\n  borderBottom: \"1px solid #ccc\",\n};\n\nconst chatInputStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: \"10px\",\n};\n\nconst inputStyle = {\n  flex: 1,\n  padding: \"10px\",\n  fontSize: \"16px\",\n  borderRadius: \"4px\",\n  border: \"1px solid #ccc\",\n  marginRight: \"10px\",\n};\n\nconst buttonStyle = {\n  padding: \"10px 20px\",\n  fontSize: \"16px\",\n  backgroundColor: \"#7B0000\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"4px\",\n  cursor: \"pointer\",\n};\n\nconst userMessageStyle = {\n  backgroundColor: \"#E0F7FA\",\n  borderRadius: \"10px\",\n  padding: \"10px\",\n  margin: \"5px 0\",\n  display: \"inline-block\",\n  maxWidth: \"70%\",\n};\n\nconst botMessageStyle = {\n  backgroundColor: \"#B2EBF2\",\n  borderRadius: \"10px\",\n  padding: \"10px\",\n  margin: \"5px 0\",\n  display: \"inline-block\",\n  maxWidth: \"70%\",\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}