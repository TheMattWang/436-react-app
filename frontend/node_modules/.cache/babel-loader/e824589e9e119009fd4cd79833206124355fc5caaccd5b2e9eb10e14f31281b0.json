{"ast":null,"code":"var _jsxFileName = \"/Users/mattwang/Documents/deg-plan/frontend/src/components/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chatbotContainerStyles,\n    children: [isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatboxStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatboxHeaderStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: closeButtonStyles,\n          onClick: () => setIsOpen(false),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatboxBodyStyles,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hi! How can I help you today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), !isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: chatButtonStyles,\n      onClick: () => setIsOpen(true),\n      children: \"\\uD83D\\uDCAC Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Chatbot;\nconst chatbotContainerStyles = {\n  position: \"fixed\",\n  // Fix the chatbot to the screen\n  bottom: \"20px\",\n  // Distance from the bottom\n  left: \"20px\",\n  // Distance from the left\n  zIndex: 1000 // Ensure it appears above other elements\n};\nconst chatboxStyles = {\n  width: \"300px\",\n  height: \"400px\",\n  backgroundColor: \"#ffffff\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"10px\",\n  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n  display: \"flex\",\n  flexDirection: \"column\"\n};\nconst chatboxHeaderStyles = {\n  backgroundColor: \"#7B0000\",\n  // Texas A&M maroon\n  color: \"#fff\",\n  padding: \"10px\",\n  borderTopLeftRadius: \"10px\",\n  borderTopRightRadius: \"10px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\"\n};\nconst closeButtonStyles = {\n  backgroundColor: \"transparent\",\n  color: \"#fff\",\n  border: \"none\",\n  fontSize: \"16px\",\n  cursor: \"pointer\"\n};\nconst chatboxBodyStyles = {\n  flex: 1,\n  padding: \"10px\",\n  overflowY: \"auto\" // Allow scrolling for long content\n};\nconst chatButtonStyles = {\n  backgroundColor: \"#7B0000\",\n  // Texas A&M maroon\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"50%\",\n  width: \"60px\",\n  height: \"60px\",\n  fontSize: \"24px\",\n  cursor: \"pointer\",\n  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\"\n};\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","style","chatbotContainerStyles","children","chatboxStyles","chatboxHeaderStyles","fileName","_jsxFileName","lineNumber","columnNumber","closeButtonStyles","onClick","chatboxBodyStyles","chatButtonStyles","_c","position","bottom","left","zIndex","width","height","backgroundColor","border","borderRadius","boxShadow","display","flexDirection","color","padding","borderTopLeftRadius","borderTopRightRadius","justifyContent","alignItems","fontSize","cursor","flex","overflowY","$RefreshReg$"],"sources":["/Users/mattwang/Documents/deg-plan/frontend/src/components/chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Chatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div style={chatbotContainerStyles}>\n      {isOpen && (\n        <div style={chatboxStyles}>\n          <div style={chatboxHeaderStyles}>\n            <h4>Chatbot</h4>\n            <button style={closeButtonStyles} onClick={() => setIsOpen(false)}>\n              âœ–\n            </button>\n          </div>\n          <div style={chatboxBodyStyles}>\n            <p>Hi! How can I help you today?</p>\n            {/* Add chatbot functionality here */}\n          </div>\n        </div>\n      )}\n      {!isOpen && (\n        <button style={chatButtonStyles} onClick={() => setIsOpen(true)}>\n          ðŸ’¬ Chat\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst chatbotContainerStyles = {\n  position: \"fixed\", // Fix the chatbot to the screen\n  bottom: \"20px\", // Distance from the bottom\n  left: \"20px\", // Distance from the left\n  zIndex: 1000, // Ensure it appears above other elements\n};\n\nconst chatboxStyles = {\n  width: \"300px\",\n  height: \"400px\",\n  backgroundColor: \"#ffffff\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"10px\",\n  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n  display: \"flex\",\n  flexDirection: \"column\",\n};\n\nconst chatboxHeaderStyles = {\n  backgroundColor: \"#7B0000\", // Texas A&M maroon\n  color: \"#fff\",\n  padding: \"10px\",\n  borderTopLeftRadius: \"10px\",\n  borderTopRightRadius: \"10px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n};\n\nconst closeButtonStyles = {\n  backgroundColor: \"transparent\",\n  color: \"#fff\",\n  border: \"none\",\n  fontSize: \"16px\",\n  cursor: \"pointer\",\n};\n\nconst chatboxBodyStyles = {\n  flex: 1,\n  padding: \"10px\",\n  overflowY: \"auto\", // Allow scrolling for long content\n};\n\nconst chatButtonStyles = {\n  backgroundColor: \"#7B0000\", // Texas A&M maroon\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"50%\",\n  width: \"60px\",\n  height: \"60px\",\n  fontSize: \"24px\",\n  cursor: \"pointer\",\n  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}