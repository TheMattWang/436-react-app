{"ast":null,"code":"var _jsxFileName = \"/Users/mattwang/Documents/deg-plan/frontend/src/components/coursesLeft.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoursesLeft = ({\n  coursesLeft = []\n}) => {\n  _s();\n  const [userName, setUserName] = useState(\"John Doe\");\n  const [graduationDate, setGraduationDate] = useState(\"May 2026\");\n  const [gpa, setGpa] = useState(\"3.8\");\n  const [degreeProgress, setDegreeProgress] = useState(\"0\");\n  const [major, setMajor] = useState(\"Computer Science\");\n  const [degreeType, setDegreeType] = useState(\"Bachelor of Science\");\n  const [filteredCoursesLeft, setFilteredCoursesLeft] = useState(coursesLeft);\n  const navigate = useNavigate();\n  const [isHovered, setIsHovered] = useState(false); // Hover state for the button\n\n  const [selectedTerms, setSelectedTerms] = useState(coursesLeft.reduce((acc, category) => {\n    category.courses.forEach(course => {\n      acc[course.name] = {\n        term: course.term || \"\",\n        notes: course.notes || \"\",\n        option: course.options ? course.selectedOption || \"\" : \"\"\n      };\n    });\n    return acc;\n  }, {}));\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const loadedPlan = JSON.parse(e.target.result);\n        setUserName(loadedPlan.userName || \"John Doe\");\n        setGraduationDate(loadedPlan.graduationDate || \"May 2026\");\n        setGpa(loadedPlan.gpa || \"N/A\");\n        setDegreeProgress(loadedPlan.degreeProgress || \"0\");\n        setMajor(loadedPlan.major || \"Computer Science\");\n        setDegreeType(loadedPlan.degreeType || \"Bachelor of Science\");\n        const updatedCoursesLeft = coursesLeft.map(category => ({\n          ...category,\n          courses: category.courses.filter(course => {\n            var _loadedPlan$selectedT;\n            return !((_loadedPlan$selectedT = loadedPlan.selectedTerms[course.name]) !== null && _loadedPlan$selectedT !== void 0 && _loadedPlan$selectedT.done);\n          })\n        }));\n        setFilteredCoursesLeft(updatedCoursesLeft);\n        setSelectedTerms(loadedPlan.selectedTerms || {});\n      } catch (error) {\n        alert(\"Error loading degree plan. Please upload a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const handleSubmit = () => {\n    navigate(\"/confirmation\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: appContainerStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: headerStyles,\n      children: \"Texas A&M Degree Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n      userName: userName,\n      graduationDate: graduationDate,\n      gpa: gpa,\n      degreeProgress: degreeProgress,\n      major: major,\n      degreeType: degreeType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: fileUploadContainerStyles,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: fileUploadLabelStyles,\n        children: [\"Load Degree Plan:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".json\",\n          onChange: handleFileUpload,\n          style: fileInputStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyles,\n      children: filteredCoursesLeft.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: categoryCardStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: categoryTitleStyles,\n          children: category.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), category.courses.map(course => {\n          var _selectedTerms$course, _selectedTerms$course2, _selectedTerms$course3, _selectedTerms$course4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: courseRowStyles,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: courseNameStyles,\n              children: [course.name, \" \", course.options && \"(Elective)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: selectGroupStyles,\n              children: [course.name.toLowerCase().includes(\"emphasis\") ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter emphasis area course\",\n                value: ((_selectedTerms$course = selectedTerms[course.name]) === null || _selectedTerms$course === void 0 ? void 0 : _selectedTerms$course.emphasisCourse) || \"\",\n                onChange: e => setSelectedTerms(prev => ({\n                  ...prev,\n                  [course.name]: {\n                    ...prev[course.name],\n                    emphasisCourse: e.target.value\n                  }\n                })),\n                style: textInputStyles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this) : course.options ? /*#__PURE__*/_jsxDEV(\"select\", {\n                value: ((_selectedTerms$course2 = selectedTerms[course.name]) === null || _selectedTerms$course2 === void 0 ? void 0 : _selectedTerms$course2.option) || \"\",\n                onChange: e => setSelectedTerms(prev => ({\n                  ...prev,\n                  [course.name]: {\n                    ...prev[course.name],\n                    option: e.target.value\n                  }\n                })),\n                style: selectStyles,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Course\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this), course.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, option, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"select\", {\n                value: ((_selectedTerms$course3 = selectedTerms[course.name]) === null || _selectedTerms$course3 === void 0 ? void 0 : _selectedTerms$course3.term) || \"\",\n                onChange: e => setSelectedTerms(prev => ({\n                  ...prev,\n                  [course.name]: {\n                    ...prev[course.name],\n                    term: e.target.value\n                  }\n                })),\n                style: selectStyles,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Term\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Fall 2024\",\n                  children: \"Fall 2024\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Spring 2025\",\n                  children: \"Spring 2025\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Fall 2025\",\n                  children: \"Fall 2025\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Spring 2026\",\n                  children: \"Spring 2026\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Add notes here\",\n                value: ((_selectedTerms$course4 = selectedTerms[course.name]) === null || _selectedTerms$course4 === void 0 ? void 0 : _selectedTerms$course4.notes) || \"\",\n                onChange: e => setSelectedTerms(prev => ({\n                  ...prev,\n                  [course.name]: {\n                    ...prev[course.name],\n                    notes: e.target.value\n                  }\n                })),\n                style: notesInputStyles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, course.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this);\n        })]\n      }, category.category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...submitButtonStyles,\n        backgroundColor: isHovered ? \"green\" : submitButtonStyles.backgroundColor\n      },\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      onClick: () => setIsModalOpen(true),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalContentStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to submit your degree plan?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: confirmButtonStyles,\n          onClick: handleSubmit,\n          children: \"Yes, Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: cancelButtonStyles,\n          onClick: () => setIsModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles\n_s(CoursesLeft, \"vxkqU6RUHjy6n6BuyYnYSLbc68A=\", false, function () {\n  return [useNavigate];\n});\n_c = CoursesLeft;\nconst appContainerStyles = {\n  fontFamily: \"'Roboto', sans-serif\",\n  backgroundColor: \"#FAFAFA\",\n  minHeight: \"100vh\",\n  padding: \"20px\"\n};\nconst headerStyles = {\n  backgroundColor: \"#B31E1E\",\n  color: \"#FFFFFF\",\n  textAlign: \"center\",\n  padding: \"20px\",\n  fontSize: \"30px\",\n  fontWeight: \"bold\",\n  borderRadius: \"10px\",\n  marginBottom: \"20px\",\n  boxShadow: \"0 6px 12px rgba(0, 0, 0, 0.2)\"\n};\nconst fileUploadContainerStyles = {\n  textAlign: \"center\",\n  marginBottom: \"20px\"\n};\nconst fileUploadLabelStyles = {\n  fontSize: \"16px\",\n  color: \"#333333\",\n  display: \"inline-block\",\n  marginBottom: \"10px\"\n};\nconst fileInputStyles = {\n  marginLeft: \"10px\"\n};\nconst containerStyles = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"20px\"\n};\nconst categoryCardStyles = {\n  backgroundColor: \"#FFFFFF\",\n  padding: \"20px\",\n  borderRadius: \"10px\",\n  boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n  border: \"1px solid #B31E1E\"\n};\nconst categoryTitleStyles = {\n  fontSize: \"22px\",\n  color: \"#7B0000\",\n  marginBottom: \"15px\",\n  borderBottom: \"3px solid #B31E1E\",\n  paddingBottom: \"5px\"\n};\nconst courseRowStyles = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  // Arrange items in a row\n  flexWrap: \"wrap\",\n  // Ensure items wrap within their container\n  gap: \"12px\",\n  marginBottom: \"15px\",\n  alignItems: \"flex-start\" // Align inputs to the top\n};\nconst courseNameStyles = {\n  fontSize: \"16px\",\n  color: \"#333333\",\n  marginBottom: \"5px\"\n};\nconst selectGroupStyles = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  // Wrap elements to prevent overflow\n  gap: \"10px\",\n  alignItems: \"flex-start\"\n};\nconst selectStyles = {\n  flex: 1,\n  padding: \"8px\",\n  borderRadius: \"6px\",\n  border: \"1px solid #CCCCCC\",\n  backgroundColor: \"#FFFFFF\",\n  color: \"#333333\",\n  maxWidth: \"160px\",\n  // Limit width\n  minWidth: \"120px\" // Maintain readability\n};\nconst textInputStyles = {\n  flex: 1,\n  padding: \"8px\",\n  borderRadius: \"6px\",\n  border: \"1px solid #CCCCCC\",\n  backgroundColor: \"#FFFFFF\",\n  color: \"#333333\",\n  maxWidth: \"200px\" // Limit width\n};\nconst notesInputStyles = {\n  flex: 2,\n  padding: \"8px\",\n  borderRadius: \"6px\",\n  border: \"1px solid #CCCCCC\",\n  backgroundColor: \"#FFFFFF\",\n  color: \"#333333\",\n  minWidth: \"200px\",\n  maxHeight: \"60px\",\n  // Set a maximum height to prevent overflow\n  overflow: \"auto\",\n  // Allow scrolling if content exceeds the maximum height\n  resize: \"vertical\" // Optional: Allow the user to resize the input box vertically\n};\nconst submitButtonStyles = {\n  display: \"block\",\n  margin: \"20px auto\",\n  padding: \"12px 25px\",\n  backgroundColor: \"#B31E1E\",\n  color: \"#FFFFFF\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  fontSize: \"18px\",\n  cursor: \"pointer\",\n  boxShadow: \"0 6px 12px rgba(0, 0, 0, 0.2)\",\n  transition: \"background-color 0.3s\"\n};\nconst modalStyles = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\",\n  backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  // Semi-transparent overlay\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  zIndex: 1000\n};\nconst modalContentStyles = {\n  backgroundColor: \"#FFFFFF\",\n  padding: \"30px\",\n  borderRadius: \"10px\",\n  boxShadow: \"0 6px 15px rgba(0, 0, 0, 0.2)\",\n  textAlign: \"center\",\n  width: \"90%\",\n  maxWidth: \"400px\",\n  fontFamily: \"'Roboto', sans-serif\"\n};\nconst confirmButtonStyles = {\n  backgroundColor: \"#B31E1E\",\n  color: \"#FFFFFF\",\n  padding: \"10px 20px\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  cursor: \"pointer\",\n  fontSize: \"16px\",\n  margin: \"10px\"\n};\nconst cancelButtonStyles = {\n  backgroundColor: \"#FFFFFF\",\n  color: \"#B31E1E\",\n  padding: \"10px 20px\",\n  border: \"2px solid #B31E1E\",\n  borderRadius: \"8px\",\n  cursor: \"pointer\",\n  fontSize: \"16px\",\n  margin: \"10px\"\n};\nexport default CoursesLeft;\nvar _c;\n$RefreshReg$(_c, \"CoursesLeft\");","map":{"version":3,"names":["React","useState","UserInfo","useNavigate","jsxDEV","_jsxDEV","CoursesLeft","coursesLeft","_s","userName","setUserName","graduationDate","setGraduationDate","gpa","setGpa","degreeProgress","setDegreeProgress","major","setMajor","degreeType","setDegreeType","filteredCoursesLeft","setFilteredCoursesLeft","navigate","isHovered","setIsHovered","selectedTerms","setSelectedTerms","reduce","acc","category","courses","forEach","course","name","term","notes","option","options","selectedOption","isModalOpen","setIsModalOpen","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","loadedPlan","JSON","parse","result","updatedCoursesLeft","map","filter","_loadedPlan$selectedT","done","error","alert","readAsText","handleSubmit","style","appContainerStyles","children","headerStyles","fileName","_jsxFileName","lineNumber","columnNumber","fileUploadContainerStyles","fileUploadLabelStyles","type","accept","onChange","fileInputStyles","containerStyles","categoryCardStyles","categoryTitleStyles","_selectedTerms$course","_selectedTerms$course2","_selectedTerms$course3","_selectedTerms$course4","courseRowStyles","courseNameStyles","selectGroupStyles","toLowerCase","includes","placeholder","value","emphasisCourse","prev","textInputStyles","selectStyles","notesInputStyles","submitButtonStyles","backgroundColor","onMouseEnter","onMouseLeave","onClick","modalStyles","modalContentStyles","confirmButtonStyles","cancelButtonStyles","_c","fontFamily","minHeight","padding","color","textAlign","fontSize","fontWeight","borderRadius","marginBottom","boxShadow","display","marginLeft","flexDirection","gap","border","borderBottom","paddingBottom","flexWrap","alignItems","flex","maxWidth","minWidth","maxHeight","overflow","resize","margin","cursor","transition","position","top","left","width","height","justifyContent","zIndex","$RefreshReg$"],"sources":["/Users/mattwang/Documents/deg-plan/frontend/src/components/coursesLeft.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CoursesLeft = ({ coursesLeft = [] }) => {\n  const [userName, setUserName] = useState(\"John Doe\");\n  const [graduationDate, setGraduationDate] = useState(\"May 2026\");\n  const [gpa, setGpa] = useState(\"3.8\");\n  const [degreeProgress, setDegreeProgress] = useState(\"0\");\n  const [major, setMajor] = useState(\"Computer Science\");\n  const [degreeType, setDegreeType] = useState(\"Bachelor of Science\");\n  const [filteredCoursesLeft, setFilteredCoursesLeft] = useState(coursesLeft);\n  const navigate = useNavigate();\n  const [isHovered, setIsHovered] = useState(false); // Hover state for the button\n\n  const [selectedTerms, setSelectedTerms] = useState(\n    coursesLeft.reduce((acc, category) => {\n      category.courses.forEach((course) => {\n        acc[course.name] = {\n          term: course.term || \"\",\n          notes: course.notes || \"\",\n          option: course.options ? course.selectedOption || \"\" : \"\",\n        };\n      });\n      return acc;\n    }, {})\n  );\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      try {\n        const loadedPlan = JSON.parse(e.target.result);\n\n        setUserName(loadedPlan.userName || \"John Doe\");\n        setGraduationDate(loadedPlan.graduationDate || \"May 2026\");\n        setGpa(loadedPlan.gpa || \"N/A\");\n        setDegreeProgress(loadedPlan.degreeProgress || \"0\");\n        setMajor(loadedPlan.major || \"Computer Science\");\n        setDegreeType(loadedPlan.degreeType || \"Bachelor of Science\");\n\n        const updatedCoursesLeft = coursesLeft.map((category) => ({\n          ...category,\n          courses: category.courses.filter(\n            (course) => !loadedPlan.selectedTerms[course.name]?.done\n          ),\n        }));\n\n        setFilteredCoursesLeft(updatedCoursesLeft);\n        setSelectedTerms(loadedPlan.selectedTerms || {});\n      } catch (error) {\n        alert(\"Error loading degree plan. Please upload a valid JSON file.\");\n      }\n    };\n\n    reader.readAsText(file);\n  };\n\n  const handleSubmit = () => {\n    navigate(\"/confirmation\");\n  };\n\n  return (\n    <div style={appContainerStyles}>\n      <div style={headerStyles}>Texas A&M Degree Plan</div>\n\n      <UserInfo\n        userName={userName}\n        graduationDate={graduationDate}\n        gpa={gpa}\n        degreeProgress={degreeProgress}\n        major={major}\n        degreeType={degreeType}\n      />\n\n      <div style={fileUploadContainerStyles}>\n        <label style={fileUploadLabelStyles}>\n          Load Degree Plan:\n          <input\n            type=\"file\"\n            accept=\".json\"\n            onChange={handleFileUpload}\n            style={fileInputStyles}\n          />\n        </label>\n      </div>\n\n      <div style={containerStyles}>\n        {filteredCoursesLeft.map((category) => (\n          <div key={category.category} style={categoryCardStyles}>\n            <h2 style={categoryTitleStyles}>{category.category}</h2>\n            {category.courses.map((course) => (\n              <div key={course.name} style={courseRowStyles}>\n                <span style={courseNameStyles}>\n                  {course.name} {course.options && \"(Elective)\"}\n                </span>\n                <div style={selectGroupStyles}>\n                  {course.name.toLowerCase().includes(\"emphasis\") ? (\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter emphasis area course\"\n                      value={selectedTerms[course.name]?.emphasisCourse || \"\"}\n                      onChange={(e) =>\n                        setSelectedTerms((prev) => ({\n                          ...prev,\n                          [course.name]: {\n                            ...prev[course.name],\n                            emphasisCourse: e.target.value,\n                          },\n                        }))\n                      }\n                      style={textInputStyles}\n                    />\n                  ) : course.options ? (\n                    <select\n                      value={selectedTerms[course.name]?.option || \"\"}\n                      onChange={(e) =>\n                        setSelectedTerms((prev) => ({\n                          ...prev,\n                          [course.name]: {\n                            ...prev[course.name],\n                            option: e.target.value,\n                          },\n                        }))\n                      }\n                      style={selectStyles}\n                    >\n                      <option value=\"\">Select Course</option>\n                      {course.options.map((option) => (\n                        <option key={option} value={option}>\n                          {option}\n                        </option>\n                      ))}\n                    </select>\n                  ) : null}\n                  <select\n                    value={selectedTerms[course.name]?.term || \"\"}\n                    onChange={(e) =>\n                      setSelectedTerms((prev) => ({\n                        ...prev,\n                        [course.name]: {\n                          ...prev[course.name],\n                          term: e.target.value,\n                        },\n                      }))\n                    }\n                    style={selectStyles}\n                  >\n                    <option value=\"\">Select Term</option>\n                    <option value=\"Fall 2024\">Fall 2024</option>\n                    <option value=\"Spring 2025\">Spring 2025</option>\n                    <option value=\"Fall 2025\">Fall 2025</option>\n                    <option value=\"Spring 2026\">Spring 2026</option>\n                  </select>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Add notes here\"\n                    value={selectedTerms[course.name]?.notes || \"\"}\n                    onChange={(e) =>\n                      setSelectedTerms((prev) => ({\n                        ...prev,\n                        [course.name]: {\n                          ...prev[course.name],\n                          notes: e.target.value,\n                        },\n                      }))\n                    }\n                    style={notesInputStyles}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <button\n        style={{\n          ...submitButtonStyles,\n          backgroundColor: isHovered ? \"green\" : submitButtonStyles.backgroundColor,\n        }}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        onClick={() => setIsModalOpen(true)}\n      >\n        Submit\n      </button>\n\n      {isModalOpen && (\n        <div style={modalStyles}>\n          <div style={modalContentStyles}>\n            <h2>Are you sure you want to submit your degree plan?</h2>\n            <button style={confirmButtonStyles} onClick={handleSubmit}>\n              Yes, Submit\n            </button>\n            <button\n              style={cancelButtonStyles}\n              onClick={() => setIsModalOpen(false)}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Styles\nconst appContainerStyles = {\n  fontFamily: \"'Roboto', sans-serif\",\n  backgroundColor: \"#FAFAFA\",\n  minHeight: \"100vh\",\n  padding: \"20px\",\n};\n\nconst headerStyles = {\n  backgroundColor: \"#B31E1E\",\n  color: \"#FFFFFF\",\n  textAlign: \"center\",\n  padding: \"20px\",\n  fontSize: \"30px\",\n  fontWeight: \"bold\",\n  borderRadius: \"10px\",\n  marginBottom: \"20px\",\n  boxShadow: \"0 6px 12px rgba(0, 0, 0, 0.2)\",\n};\n\nconst fileUploadContainerStyles = {\n  textAlign: \"center\",\n  marginBottom: \"20px\",\n};\n\nconst fileUploadLabelStyles = {\n  fontSize: \"16px\",\n  color: \"#333333\",\n  display: \"inline-block\",\n  marginBottom: \"10px\",\n};\n\nconst fileInputStyles = {\n  marginLeft: \"10px\",\n};\n\nconst containerStyles = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"20px\",\n};\n\nconst categoryCardStyles = {\n  backgroundColor: \"#FFFFFF\",\n  padding: \"20px\",\n  borderRadius: \"10px\",\n  boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n  border: \"1px solid #B31E1E\",\n};\n\nconst categoryTitleStyles = {\n  fontSize: \"22px\",\n  color: \"#7B0000\",\n  marginBottom: \"15px\",\n  borderBottom: \"3px solid #B31E1E\",\n  paddingBottom: \"5px\",\n};\n\nconst courseRowStyles = {\n  display: \"flex\",\n  flexDirection: \"row\", // Arrange items in a row\n  flexWrap: \"wrap\", // Ensure items wrap within their container\n  gap: \"12px\",\n  marginBottom: \"15px\",\n  alignItems: \"flex-start\", // Align inputs to the top\n};\n\n\nconst courseNameStyles = {\n  fontSize: \"16px\",\n  color: \"#333333\",\n  marginBottom: \"5px\",\n};\n\nconst selectGroupStyles = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\", // Wrap elements to prevent overflow\n  gap: \"10px\",\n  alignItems: \"flex-start\",\n};\n\nconst selectStyles = {\n  flex: 1,\n  padding: \"8px\",\n  borderRadius: \"6px\",\n  border: \"1px solid #CCCCCC\",\n  backgroundColor: \"#FFFFFF\",\n  color: \"#333333\",\n  maxWidth: \"160px\", // Limit width\n  minWidth: \"120px\", // Maintain readability\n};\n\nconst textInputStyles = {\n  flex: 1,\n  padding: \"8px\",\n  borderRadius: \"6px\",\n  border: \"1px solid #CCCCCC\",\n  backgroundColor: \"#FFFFFF\",\n  color: \"#333333\",\n  maxWidth: \"200px\", // Limit width\n};\n\n\nconst notesInputStyles = {\n  flex: 2,\n  padding: \"8px\",\n  borderRadius: \"6px\",\n  border: \"1px solid #CCCCCC\",\n  backgroundColor: \"#FFFFFF\",\n  color: \"#333333\",\n  minWidth: \"200px\",\n  maxHeight: \"60px\", // Set a maximum height to prevent overflow\n  overflow: \"auto\", // Allow scrolling if content exceeds the maximum height\n  resize: \"vertical\", // Optional: Allow the user to resize the input box vertically\n};\n\n\nconst submitButtonStyles = {\n  display: \"block\",\n  margin: \"20px auto\",\n  padding: \"12px 25px\",\n  backgroundColor: \"#B31E1E\",\n  color: \"#FFFFFF\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  fontSize: \"18px\",\n  cursor: \"pointer\",\n  boxShadow: \"0 6px 12px rgba(0, 0, 0, 0.2)\",\n  transition: \"background-color 0.3s\",\n};\n\nconst modalStyles = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\",\n  backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Semi-transparent overlay\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  zIndex: 1000,\n};\n\nconst modalContentStyles = {\n  backgroundColor: \"#FFFFFF\",\n  padding: \"30px\",\n  borderRadius: \"10px\",\n  boxShadow: \"0 6px 15px rgba(0, 0, 0, 0.2)\",\n  textAlign: \"center\",\n  width: \"90%\",\n  maxWidth: \"400px\",\n  fontFamily: \"'Roboto', sans-serif\",\n};\n\nconst confirmButtonStyles = {\n  backgroundColor: \"#B31E1E\",\n  color: \"#FFFFFF\",\n  padding: \"10px 20px\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  cursor: \"pointer\",\n  fontSize: \"16px\",\n  margin: \"10px\",\n};\n\nconst cancelButtonStyles = {\n  backgroundColor: \"#FFFFFF\",\n  color: \"#B31E1E\",\n  padding: \"10px 20px\",\n  border: \"2px solid #B31E1E\",\n  borderRadius: \"8px\",\n  cursor: \"pointer\",\n  fontSize: \"16px\",\n  margin: \"10px\",\n};\n\nexport default CoursesLeft;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}